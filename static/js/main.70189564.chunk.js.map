{"version":3,"sources":["components/course-item.js","components/course.js","App.js","serviceWorker.js","redux/reducers/courseReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["CourseItem","couseItem","this","props","className","src","img","alt","title","detail","href","Component","Course","renderListCourse","courseListOnline","courseListOffline","state","rowCourse","courseType","array","require","courseView","chunk","length","map","item","index","key","handleShowMore","setState","handleCourseType","onClick","data-toggle","connect","courseReducer","App","Boolean","window","location","hostname","match","initState","id","type","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8UAwBeA,E,iLArBH,IACFC,EAAcC,KAAKC,MAAnBF,UACN,OACE,yBAAKG,UAAU,8BACT,yBAAKA,UAAU,QACb,yBAAKC,IAAKJ,EAAUK,IAAKF,UAAU,eAAeG,IAAI,QACtD,yBAAKH,UAAU,aACb,wBAAIA,UAAU,cAAcH,EAAUO,OACtC,uBAAGJ,UAAU,aACVH,EAAUQ,QAEb,uBAAGC,KAAK,KAAKN,UAAU,mBAAvB,oB,GAZSO,aCCnBC,E,YACJ,WAAYT,GAAQ,IAAD,8BACjB,4CAAMA,KAQRU,iBAAmB,WAAO,IAAD,EACuB,EAAKV,MAA7CW,EADiB,EACjBA,iBAAkBC,EADD,EACCA,kBADD,EAES,EAAKC,MAA/BC,EAFiB,EAEjBA,UAAWC,EAFM,EAENA,WACbC,EAAQC,EAAQ,IAChBC,EAAa,GAQjB,GAPkB,WAAfH,EACDG,EAAaF,EAAMG,MAAMR,EAAkB,EAAEG,GAExB,YAAfC,IACNG,EAAaF,EAAMG,MAAMP,EAAmB,EAAEE,IAG7CI,EAAWE,OAAS,EACrB,OAAOF,EAAW,GAAGG,KAAI,SAACC,EAAMC,GAC9B,OAAQ,kBAAC,EAAD,CAAYzB,UAAWwB,EAAME,IAAKD,QAvB7B,EA2BnBE,eAAiB,WAAO,IAChBX,EAAa,EAAKD,MAAlBC,UACNA,IACA,EAAKY,SAAS,CACZZ,eA/Be,EAkCnBa,iBAAmB,SAACZ,GAClB,EAAKW,SAAS,CACZX,aACAD,UAAW,KAnCb,EAAKD,MAAQ,CACXE,WAAY,SACZD,UAAW,GAJI,E,mHAwCT,IAAD,OACP,OACE,6BAASb,UAAU,oBACjB,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aACb,yBACEC,IAAI,mEACJE,IAAI,GACJH,UAAU,eAGd,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,gBACZ,wBAAIA,UAAU,6BAA6B2B,QAAS,kBAAM,EAAKD,iBAAiB,YAC9E,uBAAG1B,UAAU,kBAAkBM,KAAK,KAAKsB,cAAY,OAArD,kBAIF,wBAAI5B,UAAU,6BAA6B2B,QAAS,kBAAM,EAAKD,iBAAiB,aAC9E,uBAAG1B,UAAU,WAAWM,KAAK,KAAKsB,cAAY,OAA9C,sBAOR,yBAAK5B,UAAU,6BACZF,KAAKW,oBAER,yBAAKT,UAAU,mDACb,4BAAQA,UAAU,MAAM2B,QAAS7B,KAAK0B,gBACpC,uBAAGxB,UAAU,0BADf,mB,GAvEWO,aAsFNsB,eANS,SAAAjB,GACtB,MAAO,CACLF,iBAAkBE,EAAMkB,cAAcpB,iBACtCC,kBAAmBC,EAAMkB,cAAcnB,qBAGH,KAAzBkB,CAA+BrB,GC7E/BuB,MATf,WACE,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2BChBFC,EAAY,CACd3B,iBAAkB,CAChB,CACE4B,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,GACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,mBACPC,OAAQ,kGAEV,CACEiC,GAAI,GACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,mBACPC,OAAQ,mGAKZM,kBAAmB,CACjB,CACE2B,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,kGAEV,CACEiC,GAAI,EACJC,KAAM,SACNrC,IAAK,uCACLE,MAAO,kBACPC,OAAQ,oGAaCyB,EARO,WAAgC,IAA/BlB,EAA8B,uDAAtByB,EAAWG,EAAW,uCAG/C,OAFIA,EAAOD,KAEJ,eAAK3B,ICrJH6B,EAHKC,YAAgB,CAChCZ,kBCcEa,G,8BAAmBV,OAAOW,sCAAwCC,KAClEC,EAAQC,YAAYN,EAAaE,EAAiBK,YAAgBC,OACxEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEAM,SAASC,eAAe,SH4GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.70189564.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CourseItem extends Component {\r\n  render() {\r\n    let { couseItem } = this.props;\r\n    return (\r\n      <div className=\"col-6 col-md-3 course-item\">\r\n            <div className=\"card\">\r\n              <img src={couseItem.img} className=\"card-img-top\" alt=\"...\" />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{couseItem.title}</h5>\r\n                <p className=\"card-text\">\r\n                  {couseItem.detail}\r\n          </p>\r\n                <a href=\"#x\" className=\"btn btn-primary\">\r\n                  Go Detail\r\n          </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CourseItem from \"./course-item\";\r\nclass Course extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courseType: \"online\",\r\n      rowCourse: 1,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n  }\r\n  renderListCourse = () => {\r\n    let { courseListOnline, courseListOffline } = this.props;\r\n    let { rowCourse, courseType } = this.state;\r\n    let array = require('lodash');\r\n    let courseView = [];\r\n    if(courseType === \"online\"){\r\n      courseView = array.chunk(courseListOnline, 4*rowCourse);\r\n    }\r\n    else if(courseType === \"offline\"){\r\n      courseView = array.chunk(courseListOffline, 4*rowCourse);\r\n    }\r\n\r\n    if(courseView.length > 0){\r\n      return courseView[0].map((item, index) => {\r\n        return (<CourseItem couseItem={item} key={index} />)\r\n      })\r\n    }\r\n  }\r\n  handleShowMore = () => {\r\n    let { rowCourse }= this.state;\r\n    rowCourse++;\r\n    this.setState({\r\n      rowCourse\r\n    })\r\n  }\r\n  handleCourseType = (courseType) => {\r\n    this.setState({\r\n      courseType,\r\n      rowCourse: 1,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"course container\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"logo w-25\">\r\n            <img\r\n              src=\"http://www.dasedesigns.com/wp-content/uploads/2018/05/Icon-1.png\"\r\n              alt=\"\"\r\n              className=\"img-fluid\"\r\n            />\r\n          </div>\r\n          <div className=\"course-deatil\">\r\n            <ul className=\"nav nav-tabs\">\r\n              <li className=\"nav-item course-list-title\" onClick={() => this.handleCourseType(\"online\")}>\r\n                <a className=\"nav-link active\" href=\"#x\" data-toggle=\"tab\">\r\n                  Online Course\r\n          </a>\r\n              </li>\r\n              <li className=\"nav-item course-list-title\" onClick={() => this.handleCourseType(\"offline\")}>\r\n                <a className=\"nav-link\" href=\"#x\" data-toggle=\"tab\">\r\n                  Offline course\r\n          </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mx-0 course-list mt-5\">\r\n          {this.renderListCourse()}\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-4 btnShow mb-4\">\r\n          <button className=\"btn\" onClick={this.handleShowMore}>\r\n            <i className=\"fa fa-arrow-down mr-2\" />\r\n            Show more\r\n    </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapStateToDrops = state => {\r\n  return {\r\n    courseListOnline: state.courseReducer.courseListOnline,\r\n    courseListOffline: state.courseReducer.courseListOffline\r\n  }\r\n}\r\nexport default connect(mapStateToDrops, null)(Course);","import React, { Fragment } from 'react';\nimport './App.css';\nimport Course from \"./components/course\";\nfunction App() {\n  return (\n    <Fragment>\n      <Course />\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import * as ActionType from \"./../constants/actionType\";\r\n\r\nlet initState = {\r\n  courseListOnline: [\r\n    {\r\n      id: 1,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 1\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 2\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 3\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 4\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 5\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 6,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 6\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 7,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 7\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 8,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 8\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 9,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 9\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 10,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 10\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 11,\r\n      type: \"online\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course online 11\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n\r\n  ],\r\n\r\n  courseListOffline: [\r\n    {\r\n      id: 1,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 1\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 2\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 3\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 4,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 4\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 5,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 5\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 6,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 6\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 7,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 7\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 8,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 8\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n    {\r\n      id: 9,\r\n      type: \"ofline\",\r\n      img: \"https://logodix.com/logo/2163252.png\",\r\n      title: \"Course ofline 9\",\r\n      detail: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\r\n    },\r\n\r\n  ],\r\n}\r\nconst courseReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return { ...state }\r\n  }\r\n\r\n};\r\n\r\nexport default courseReducer;","import { combineReducers } from \"redux\";\r\nimport courseReducer from \"./courseReducer\";\r\nconst rootReducer = combineReducers({\r\n    courseReducer\r\n})\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"popper.js/dist/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./assets/scss/index.scss\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"lodash\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}